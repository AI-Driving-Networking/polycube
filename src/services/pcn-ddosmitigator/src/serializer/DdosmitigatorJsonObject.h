/**
* ddosmitigator API
* ddosmitigator API generated from ddosmitigator.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* DdosmitigatorJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"

#include "BlacklistDstJsonObject.h"
#include "BlacklistSrcFileJsonObject.h"
#include "StatsJsonObject.h"
#include "BlacklistSrcJsonObject.h"
#include <vector>
#include "polycube/services/cube.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

enum class DdosmitigatorStatsModeEnum {
  READ_ONLY, READ_CLEAR
};

/// <summary>
///
/// </summary>
class  DdosmitigatorJsonObject : public JsonObjectBase {
public:
  DdosmitigatorJsonObject();
  DdosmitigatorJsonObject(const nlohmann::json &json);
  ~DdosmitigatorJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Name of the ddosmitigator service
  /// </summary>
  std::string getName() const;
  void setName(std::string value);
  bool nameIsSet() const;

  /// <summary>
  ///
  /// </summary>
  StatsJsonObject getStats() const;
  void setStats(StatsJsonObject value);
  bool statsIsSet() const;
  void unsetStats();

  /// <summary>
  /// Blacklisted source IP addresses
  /// </summary>
  const std::vector<BlacklistSrcJsonObject>& getBlacklistSrc() const;
  void addBlacklistSrc(BlacklistSrcJsonObject value);
  bool blacklistSrcIsSet() const;
  void unsetBlacklistSrc();

  /// <summary>
  /// Blacklisted destination IP addresses
  /// </summary>
  const std::vector<BlacklistDstJsonObject>& getBlacklistDst() const;
  void addBlacklistDst(BlacklistDstJsonObject value);
  bool blacklistDstIsSet() const;
  void unsetBlacklistDst();

  /// <summary>
  /// Blacklist file
  /// </summary>
  BlacklistSrcFileJsonObject getBlacklistSrcFile() const;
  void setBlacklistSrcFile(BlacklistSrcFileJsonObject value);
  bool blacklistSrcFileIsSet() const;
  void unsetBlacklistSrcFile();

  /// <summary>
  /// Stats mode, read stats only, or read the stats then clear it
  /// </summary>
  DdosmitigatorStatsModeEnum getStatsMode() const;
  void setStatsMode(DdosmitigatorStatsModeEnum value);
  bool statsModeIsSet() const;
  void unsetStatsMode();
  static std::string DdosmitigatorStatsModeEnum_to_string(const DdosmitigatorStatsModeEnum &value);
  static DdosmitigatorStatsModeEnum string_to_DdosmitigatorStatsModeEnum(const std::string &str);


private:
  std::string m_name;
  bool m_nameIsSet;
  StatsJsonObject m_stats;
  bool m_statsIsSet;
  std::vector<BlacklistSrcJsonObject> m_blacklistSrc;
  bool m_blacklistSrcIsSet;
  std::vector<BlacklistDstJsonObject> m_blacklistDst;
  bool m_blacklistDstIsSet;
  BlacklistSrcFileJsonObject m_blacklistSrcFile;
  bool m_blacklistSrcFileIsSet;
  DdosmitigatorStatsModeEnum m_statsMode;
  bool m_statsModeIsSet;
};

}
}
}
}


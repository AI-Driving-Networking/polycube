/**
* k8switch API
* Kubernetes HyperSwitch Service
*
* OpenAPI spec version: 2.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


// These methods have a default implementation. Your are free to keep it or add your own


#include "../Service.h"


nlohmann::fifo_map<std::string, std::string>  Service::getKeys() {
  nlohmann::fifo_map<std::string, std::string>  r;

  r["vip"] = getVip();

  r["vport"] = getVport();

  r["proto"] = ServiceJsonObject::ServiceProtoEnum_to_string(getProto());

  return r;
}





// NOTE: These functions are implemented  in src/Service.cpp
//std::shared_ptr<ServiceBackend> Service::getBackend(const std::string &ip, const uint16_t &port){
//  return ServiceBackend::getEntry(*this, ip, port);
//}

//std::vector<std::shared_ptr<ServiceBackend>> Service::getBackendList(){
//  return ServiceBackend::get(*this);
//}

//void Service::addBackend(const std::string &ip, const uint16_t &port, const ServiceBackendJsonObject &conf){
//  ServiceBackend::create(*this, ip, port, conf);
//}

//void Service::addBackendList(const std::vector<ServiceBackendJsonObject> &conf){
//  for(auto &i : conf){
//    std::string ip_ = i.getIp();
//    uint16_t port_ = i.getPort();
//    ServiceBackend::create(*this, ip_, port_,  i);
//  }
//}

void Service::replaceBackend(const std::string &ip, const uint16_t &port, const ServiceBackendJsonObject &conf){
  throw std::runtime_error("Service::replaceBackend is unimplemented");
  //ServiceBackend::removeEntry(*this, ip, port);
  //std::string ip_ = conf.getIp();
  //uint16_t port_ = conf.getPort();
  //ServiceBackend::create(*this, ip_, port_, conf);
}

//void Service::delBackend(const std::string &ip, const uint16_t &port){
//  ServiceBackend::removeEntry(*this, ip, port);
//}

//void Service::delBackendList(){
//  ServiceBackend::remove(*this);
//}




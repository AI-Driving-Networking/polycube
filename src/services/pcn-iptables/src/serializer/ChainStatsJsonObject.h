/**
* iptables API
* iptables API generated from iptables.yang
*
* OpenAPI spec version: 1.0.0
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/polycube-network/swagger-codegen.git
* branch polycube
*/


/* Do not edit this file manually */

/*
* ChainStatsJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"


namespace io {
namespace swagger {
namespace server {
namespace model {


/// <summary>
///
/// </summary>
class  ChainStatsJsonObject : public JsonObjectBase {
public:
  ChainStatsJsonObject();
  virtual ~ChainStatsJsonObject();

  /////////////////////////////////////////////
  /// JsonObjectBase overrides

  void validateKeys() override;
  void validateMandatoryFields() override;
  void validateParams() override;

  nlohmann::json toJson() const override;
  void fromJson(nlohmann::json& json) override;

  static nlohmann::json helpKeys();
  static nlohmann::json helpElements();
  static nlohmann::json helpWritableLeafs();
  static nlohmann::json helpComplexElements();
  static std::vector<std::string> helpActions();
  /////////////////////////////////////////////
  /// ChainStatsJsonObject members

  /// <summary>
  /// Rule Identifier
  /// </summary>
  uint32_t getId() const;
  void setId(uint32_t value);
  bool idIsSet() const;
  void unsetId();

  /// <summary>
  /// Number of packets matching the rule
  /// </summary>
  uint64_t getPkts() const;
  void setPkts(uint64_t value);
  bool pktsIsSet() const;
  void unsetPkts();

  /// <summary>
  /// Number of bytes matching the rule
  /// </summary>
  uint64_t getBytes() const;
  void setBytes(uint64_t value);
  bool bytesIsSet() const;
  void unsetBytes();

  /// <summary>
  /// Description of rule
  /// </summary>
  std::string getDesc() const;
  void setDesc(std::string value);
  bool descIsSet() const;
  void unsetDesc();

protected:
  uint32_t m_id;
  bool m_idIsSet;
  uint64_t m_pkts;
  bool m_pktsIsSet;
  uint64_t m_bytes;
  bool m_bytesIsSet;
  std::string m_desc;
  bool m_descIsSet;

  std::vector<std::string> allowedParameters_{ "id", "pkts", "bytes", "description" };
};

}
}
}
}

